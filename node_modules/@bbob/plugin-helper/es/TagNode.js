"use strict";

exports.__esModule = true;
exports.default = exports.TagNode = void 0;

var _char = require("./char");

var _index = require("./index");

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

var getTagAttrs = (tag, params) => {
  var uniqAattr = (0, _index.getUniqAttr)(params);

  if (uniqAattr) {
    var tagAttr = (0, _index.attrValue)(tag, uniqAattr);

    var attrs = _extends({}, params);

    delete attrs[uniqAattr];
    var attrsStr = (0, _index.attrsToString)(attrs);
    return "" + tagAttr + attrsStr;
  }

  return "" + tag + (0, _index.attrsToString)(params);
};

class TagNode {
  constructor(tag, attrs, content) {
    this.tag = tag;
    this.attrs = attrs;
    this.content = [].concat(content);
  }

  attr(name, value) {
    if (typeof value !== 'undefined') {
      this.attrs[name] = value;
    }

    return this.attrs[name];
  }

  append(value) {
    return (0, _index.appendToNode)(this, value);
  }

  get length() {
    return (0, _index.getNodeLength)(this);
  }

  toTagNode() {
    return new TagNode(this.tag.toLowerCase(), this.attrs, this.content);
  }

  toString() {
    var OB = _char.OPEN_BRAKET;
    var CB = _char.CLOSE_BRAKET;
    var isEmpty = this.content.length === 0;
    var content = this.content.reduce((r, node) => r + node.toString(), '');
    var tagAttrs = getTagAttrs(this.tag, this.attrs);

    if (isEmpty) {
      return "" + OB + tagAttrs + CB;
    }

    return "" + OB + tagAttrs + CB + content + OB + _char.SLASH + this.tag + CB;
  }

}

exports.TagNode = TagNode;

TagNode.create = function (tag, attrs, content) {
  if (attrs === void 0) {
    attrs = {};
  }

  if (content === void 0) {
    content = [];
  }

  return new TagNode(tag, attrs, content);
};

TagNode.isOf = (node, type) => node.tag === type;

var _default = TagNode;
exports.default = _default;